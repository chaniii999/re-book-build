name: Deploy Spring Application to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Gradle 래퍼 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 3. 배포 디렉토리 생성
      - name: Make directory for deliver
        run: mkdir deploy

      # 4. Secrets에서 application-prod.yml 생성
      - name: Write the application.yml
        run: |
          echo "${{ secrets.APPLICATION_PROD_YML }}" > ./src/main/resources/application-local.yml

      # 5. Docker 이미지를 빌드하고 Docker Hub에 푸시
      - name: Build and Push Docker Image
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build and Push
        run: |
          docker build --no-cache -t chani999/re_book:latest .
          docker push chani999/re_book:latest

      # 6. Docker Hub에서 이미지 Pull 및 EC2 배포
      - name: Deploy to Dev
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo "Logging into Docker Hub..."
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            
            echo "Stopping existing containers..."
            docker-compose down || true

            echo "Removing old Docker image..."
            docker rmi chani999/re_book:latest || true

            echo "Pulling the latest Docker image..."
            docker pull chani999/re_book:latest

            echo "Starting new container..."
            docker-compose up -d
